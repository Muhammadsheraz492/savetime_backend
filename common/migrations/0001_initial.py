# Generated by Django 4.1.13 on 2024-06-22 11:53

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'Category',
            },
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('translated_label', models.CharField(max_length=100)),
                ('edit_type', models.CharField(max_length=100)),
                ('data_options', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'content',
            },
        ),
        migrations.CreateModel(
            name='DurationLimit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'duration_limit',
            },
        ),
        migrations.CreateModel(
            name='Gig_Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_id', models.CharField(max_length=100)),
                ('sub_category_id', models.CharField(max_length=100)),
                ('service_type', models.BooleanField()),
                ('server_type_id', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='GigMetaData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('type', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'GigMetaData',
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('has_nested_gig_metadata', models.BooleanField()),
                ('has_gig_price', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'ServiceType',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('has_nested_gig_metadata', models.BooleanField()),
                ('service_type', models.BooleanField()),
                ('is_price', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_subcategories', to='common.category')),
                ('service_type_data', models.ManyToManyField(related_name='subcategories', to='common.servicetype')),
            ],
            options={
                'db_table': 'Subcategory',
            },
        ),
        migrations.AddField(
            model_name='servicetype',
            name='subcategory',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='service_types', to='common.subcategory'),
        ),
        migrations.CreateModel(
            name='Packages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration_unit', models.CharField(max_length=100)),
                ('is_duration_limit', models.BooleanField()),
                ('is_content', models.BooleanField()),
                ('title', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('duration_limit', models.ManyToManyField(related_name='durations', to='common.durationlimit')),
                ('servicetype', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='service_types', to='common.servicetype')),
                ('subcategory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='packages', to='common.subcategory')),
            ],
            options={
                'db_table': 'Packages',
            },
        ),
        migrations.CreateModel(
            name='Options',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('gig_meta_data', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_options', to='common.gigmetadata')),
            ],
            options={
                'db_table': 'Options',
            },
        ),
        migrations.AddField(
            model_name='gigmetadata',
            name='options',
            field=models.ManyToManyField(related_name='metadata', to='common.options'),
        ),
        migrations.AddField(
            model_name='gigmetadata',
            name='service_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='metadata', to='common.servicetype'),
        ),
        migrations.AddField(
            model_name='gigmetadata',
            name='subcategory',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='metadata', to='common.subcategory'),
        ),
        migrations.CreateModel(
            name='GigData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('category', models.ManyToManyField(to='common.gig_category')),
            ],
        ),
        migrations.AddField(
            model_name='gig_category',
            name='gig',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='common.gigdata'),
        ),
        migrations.AddField(
            model_name='durationlimit',
            name='package_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='foreign_key_of_packages', to='common.packages'),
        ),
        migrations.CreateModel(
            name='DataOptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100)),
                ('text', models.CharField(max_length=100)),
                ('val', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='foreign_key_of_packages', to='common.content')),
            ],
            options={
                'db_table': 'data_options',
            },
        ),
        migrations.AddField(
            model_name='content',
            name='package',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='foreign_key_of_content', to='common.packages'),
        ),
        migrations.AddField(
            model_name='category',
            name='sub_categories',
            field=models.ManyToManyField(related_name='categories', to='common.subcategory'),
        ),
    ]
